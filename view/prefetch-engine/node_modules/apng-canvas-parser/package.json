{
  "_args": [
    [
      "apng-canvas-parser@git://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
      "/home/bhagabot/dev/git/monkeymaya/view/prefetch-engine/node_modules/pixel-png"
    ]
  ],
  "_from": "git://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
  "_id": "apng-canvas-parser@2.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/apng-canvas-parser",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/59naga/apng-canvas-parser/727a15dcea6a070569e3b331966f4e3fd92d3a6c/package.json",
      "gitUrl": "git://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
      "httpsUrl": "git+https://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
      "shortcut": "github:59naga/apng-canvas-parser#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
      "ssh": "git@github.com:59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
      "sshUrl": "git+ssh://git@github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
      "type": "github"
    },
    "name": "apng-canvas-parser",
    "raw": "apng-canvas-parser@git://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
    "rawSpec": "git://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
    "scope": null,
    "spec": "git://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
    "type": "hosted"
  },
  "_requiredBy": [
    "/pixel-png"
  ],
  "_resolved": "git://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
  "_shasum": "f835c42a9912cfefcdfc8b26bff823d3694c4e41",
  "_shrinkwrap": null,
  "_spec": "apng-canvas-parser@git://github.com/59naga/apng-canvas-parser.git#727a15dcea6a070569e3b331966f4e3fd92d3a6c",
  "_where": "/home/bhagabot/dev/git/monkeymaya/view/prefetch-engine/node_modules/pixel-png",
  "author": {
    "name": "David Mzareulyan"
  },
  "dependencies": {
    "bluebird": "^2.9.27",
    "pngparse": "^2.0.1"
  },
  "description": "Library for displaing animated PNG files in browsers with canvas support",
  "devDependencies": {
    "gulp": "latest",
    "gulp-add-src": "~0.2.0",
    "gulp-browserify": "~0.5.0",
    "gulp-concat": "~2.4.3",
    "gulp-uglify": "latest"
  },
  "gitHead": "727a15dcea6a070569e3b331966f4e3fd92d3a6c",
  "homepage": "https://github.com/davidmz/apng-canvas",
  "keywords": [
    "animated png",
    "animation",
    "apng",
    "canvas"
  ],
  "license": "MIT",
  "main": "src/parser.node.js",
  "name": "apng-canvas-parser",
  "optionalDependencies": {},
  "readme": "(Experimental node.js version)apng-canvas v2.1.0\n==============\n```bash\nnpm install 59naga/apng-canvas-parser fixture-images\n```\n```js\nvar apngCanvasParser= require('apng-canvas-parser');\n\nvar buffer= require('fixture-images').animated.png;\napngCanvasParser(buffer).then(function(images){\n  console.log(images.length === 34);// true\n});\n```\n\n\napng-canvas v2.1.0\n==============\n\n([README по-русски](https://github.com/davidmz/apng-canvas/blob/master/README_RU.md))\n\nLibrary to display Animated PNG ([Wikipedia](http://en.wikipedia.org/wiki/APNG), [specification](https://wiki.mozilla.org/APNG_Specification)) in a browser using canvas.\n\nWorking demo: https://davidmz.github.io/apng-canvas/ (around 3 Mb of apng files)\n\n**Please note! API version 2 of the library is incompatible with the API version 1!**\n\nThe library requires support from the following technologies in order to run:\n\n * [Canvas](http://caniuse.com/#feat=canvas)\n * [Typed Arrays](http://caniuse.com/#feat=typedarrays)\n * [Blob URLs](http://caniuse.com/#feat=bloburls)\n * [requestAnimationFrame](http://caniuse.com/#feat=requestanimationframe)\n \nThese technologies are supported in all modern browsers and IE starting with version 10.\n\n\nSome browsers (at the moment these are Firefox and Safari 8+) have [native support for APNG](http://caniuse.com/#feat=apng). \nThis library is not required for these browsers.\n\nUsage example\n-----------\n\n```javascript\nAPNG.ifNeeded().then(function() {\n    var images = document.querySelectorAll(\".apng-image\");\n    for (var i = 0; i < images.length; i++) APNG.animateImage(images[i]);\n});\n```\n\nLimitations\n-----------\n\nImages are loaded using `XMLHttpRequest`, therefore, the HTML page and APNG image must be located on the same domain\nor the correct [CORS](http://www.w3.org/TR/cors/ \"Cross-Origin Resource Sharing\") header should be provided\n(for example, `Access-Control-Allow-Origin: *`).\nFor the same reason, the library will not work on a local machine (using the protocol `file://`).\n\n**Important note!** Compression proxies (turbo mode in Opera, \"reduce data usage\" mode in mobile Chrome, etc.), doesn't know about\nAPNG format. These proxies transforms APNGs into static images. To prevent it for *your* images, they need to be served with \n`Cache-Control: no-transform` HTTP header (see [big article](http://calendar.perfplanet.com/2013/mobile-isp-image-recompression/) about such proxies),\nor via HTTPS.\n\n\nAPI\n-----------\n\nThe library creates a global object **APNG**, which has several methods.\n\nHigh-level methods:\n\n* [APNG.ifNeeded](API.md#user-content-apngifneededignorenativeapng-boolean)\n* [APNG.animateImage](API.md#user-content-apnganimateimageimg-htmlimageelement)\n* [APNG.releaseCanvas](API.md#user-content-apngreleasecanvascanvas-htmlcanvaselement)\n\nLow-level methods:\n\n* [APNG.checkNativeFeatures](API.md#user-content-apngchecknativefeatures)\n* [APNG.parseBuffer](API.md#user-content-apngparsebufferdata-arraybuffer)\n* [APNG.parseURL](API.md#user-content-apngparseurlurl-string)\n* [APNG.animateContext](API.md#user-content-apnganimatecontexturl-string-canvasrenderingcontext2d-context)\n\nMost methods work asynchronously and return the ES6 *Promise* object. Most browsers have [built-in support](http://caniuse.com/#feat=promises) for it. \nFor others browsers, library uses [polifill](https://github.com/jakearchibald/es6-promise) (included in the library).\nIf you have not worked before with Promises, then you should read the [review paper](http://www.html5rocks.com/en/tutorials/es6/promises/) about this technology. \nThe method description includes values of the Promise result in cases where it is *fulfilled* or *rejected*.\n\nBuild instructions\n-----------\n\n    npm install\n    gulp build",
  "readmeFilename": "README.md",
  "version": "2.1.0"
}
