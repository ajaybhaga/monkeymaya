{
  "_args": [
    [
      "tab64@0.0.1",
      "/home/bhagabot/dev/git/monkeymaya/view/prefetch-engine/node_modules/gl-gif"
    ]
  ],
  "_from": "tab64@0.0.1",
  "_id": "tab64@0.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/tab64",
  "_npmUser": {
    "email": "hughskennedy@gmail.com",
    "name": "hughsk"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "tab64",
    "raw": "tab64@0.0.1",
    "rawSpec": "0.0.1",
    "scope": null,
    "spec": "0.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "/gl-gif"
  ],
  "_resolved": "https://registry.npmjs.org/tab64/-/tab64-0.0.1.tgz",
  "_shasum": "5932ad1272c56bed0bdbb59d7de0f427c6cab29b",
  "_shrinkwrap": null,
  "_spec": "tab64@0.0.1",
  "_where": "/home/bhagabot/dev/git/monkeymaya/view/prefetch-engine/node_modules/gl-gif",
  "author": {
    "email": "hughskennedy@gmail.com",
    "name": "Hugh Kennedy",
    "url": "http://github.com/hughsk"
  },
  "browser": "index.js",
  "bugs": {
    "url": "https://github.com/hughsk/tab64/issues"
  },
  "dependencies": {
    "dtype": "~0.1.0"
  },
  "description": "Encode/decode typed arrays (e.g. Float32Array, Uint8Array) to and from base64 strings.",
  "devDependencies": {
    "tape": "~1.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "5932ad1272c56bed0bdbb59d7de0f427c6cab29b",
    "tarball": "https://registry.npmjs.org/tab64/-/tab64-0.0.1.tgz"
  },
  "homepage": "https://github.com/hughsk/tab64#readme",
  "keywords": [
    "arrays",
    "base64",
    "binary",
    "convert",
    "data",
    "float32",
    "typed",
    "uint8"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    }
  ],
  "name": "tab64",
  "optionalDependencies": {},
  "readme": "# tab64 [![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nEncode/decode typed arrays (e.g. Float32Array, Uint8Array) to and from base64\nstrings.\n\n## Usage ##\n\n[![tab64](https://nodei.co/npm/tab64.png?mini=true)](https://nodei.co/npm/tab64)\n\n### `tab64.encode(array)` ###\n\nTakes a typed array of any format and returns a base64-encoded string.\n\n### `tab64.decode(string[, type|output])` ###\n\nGiven a base64-encoded `string`, populate a typed array with the original\ndata's values.\n\n`type` is a string [dtype](http://github.com/shama/dtype) which should match\nthe original data type you were using. It defaults to `uint8`, but if you\nwant to encode other types you'll need to pass this in or you'll get mangled\nresults. This example should work:\n\n``` javascript\nvar data = new Float32Array([97, 98, 99])\nvar original = encode(data)\nvar copy = decode(data, 'float32') // [97, 98, 99]\n```\n\nAlternatively, you can pass a second `output` array instead of a `type` to push\ndata straight into that array.\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/tab64/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/tab64.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "0.0.1"
}
